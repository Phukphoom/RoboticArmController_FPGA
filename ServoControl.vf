////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : ServoControl.vf
// /___/   /\     Timestamp : 12/15/2020 23:11:08
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family spartan6 -verilog C:/Users/Admin/Desktop/RoboticArm/RoboticArm/ServoControl.vf -w C:/Users/Admin/Desktop/RoboticArm/RoboticArm/ServoControl.sch
//Design Name: ServoControl
//Device: spartan6
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale  100 ps / 10 ps

module COMPM8_HXILINX_ServoControl (GT, LT, A, B);
    

   output GT;
   output LT;

   input  [7:0] A;
   input  [7:0] B;


   assign GT = A > B  ;
   assign LT = A < B  ;

endmodule
`timescale 100 ps / 10 ps

module CB4CE_HXILINX_ServoControl(CEO, Q0, Q1, Q2, Q3, TC, C, CE, CLR);
   
   localparam TERMINAL_COUNT = 4'b1111;
   
   output             CEO;
   output             Q0;
   output             Q1;
   output             Q2;
   output             Q3;
   output             TC;

   input 	      C;	
   input 	      CE;	
   input 	      CLR;	
   
   reg                Q0;
   reg                Q1;
   reg                Q2;
   reg                Q3;
   
   always @(posedge C or posedge CLR)
     begin
	if (CLR)
	  {Q3, Q2, Q1, Q0} <= 4'b0000;
	else if (CE)
	  {Q3, Q2, Q1,Q0} <= {Q3, Q2, Q1,Q0} + 1;
     end
   
   assign CEO = TC & CE;
   assign TC = ({Q3, Q2, Q1, Q0} == TERMINAL_COUNT);
   
endmodule
`timescale 100 ps / 10 ps
 
module CC16CE_HXILINX_ServoControl(CEO, Q, TC, C, CE, CLR);
 
   parameter TERMINAL_COUNT = 16'b1111_1111_1111_1111;
   
   output             CEO;
   output [15:0]      Q;
   output             TC;

   input 	      C;
   input 	      CE;
   input 	      CLR;
   
   reg    [15:0]      Q;
   
   always @(posedge C or posedge CLR)
     begin
        if (CLR)
          Q <= 16'b0000_0000_0000_0000;
        else if (CE)
          Q <= Q + 1;
     end
   
   assign CEO = TC & CE;
   assign TC = CLR ? 1'b0 : (Q == TERMINAL_COUNT);
   
endmodule
`timescale 100 ps / 10 ps

module FTC_HXILINX_ServoControl(Q, C, CLR, T);
   
   output             Q;

   input 	      C;	
   input 	      CLR;	
   input              T;
   
   parameter INIT = 1'b0;
   reg                Q = INIT;
  
   
 
   always @(posedge C or posedge CLR)
     begin
	if (CLR)
	  Q <= 1'b0;
	else if(T)
          Q <= !Q;
     end
   
endmodule
`timescale  100 ps / 10 ps

module COMPM16_HXILINX_ServoControl (GT, LT, A, B);
    

   output GT;
   output LT;

   input  [15:0] A;
   input  [15:0] B;

   assign GT = A > B  ;
   assign LT = A < B  ;

endmodule
`timescale 100 ps / 10 ps

module CD4CE_HXILINX_ServoControl(CEO, Q0, Q1, Q2, Q3, TC, C, CE, CLR);
   
   parameter TERMINAL_COUNT = 4'b1001;
   
   output             CEO;
   output             Q0;
   output             Q1;
   output             Q2;
   output             Q3;
   output             TC;

   input 	      C;	
   input 	      CE;	
   input 	      CLR;	
   
   reg                Q0;
   reg                Q1;
   reg                Q2;
   reg                Q3;
   
   always @(posedge C or posedge CLR)
     begin
	if (CLR)
	  {Q3, Q2, Q1, Q0} <= 4'b0000;

	else if (CE)
          begin
             if ({Q3,Q2,Q1,Q0} == 4'b1001)
               {Q3,Q2,Q1,Q0} <= 4'b0000;
             else if({Q3,Q2,Q1,Q0} == 4'b1011)
               {Q3,Q2,Q1,Q0} <= 4'b0110;
             else if({Q3,Q2,Q1,Q0} == 4'b1101)
               {Q3,Q2,Q1,Q0} <= 4'b0100;
             else if({Q3,Q2,Q1,Q0} == 4'b1111)
               {Q3,Q2,Q1,Q0} <= 4'b0010;
            
             else
	      {Q3, Q2, Q1,Q0} <= {Q3, Q2, Q1,Q0} + 1;
          end
     end
   
   assign CEO = TC & CE;
   assign TC = CLR ? 1'b0 : ({Q3, Q2, Q1, Q0} == TERMINAL_COUNT);
   
endmodule
`timescale  100 ps / 10 ps

module M2_1_HXILINX_ServoControl (O, D0, D1, S0);
    

   output O;

   input  D0;
   input  D1;
   input  S0;

   reg O;

   always @ ( D0 or D1 or S0)
   begin
      case(S0)
      1'b0 : O <= D0;
      1'b1 : O <= D1;
      endcase
   end
    
endmodule
`timescale  100 ps / 10 ps

module COMP16_HXILINX_ServoControl (EQ, A, B);
    

   output EQ;

   input  [15:0] A;
   input  [15:0] B;

   assign EQ = (A == B) ;

endmodule
`timescale 1ns / 1ps

module HalfAdder_MUSER_ServoControl(A_P66, 
                                    B_P62, 
                                    Cout_P81, 
                                    R_P82);

    input A_P66;
    input B_P62;
   output Cout_P81;
   output R_P82;
   
   
   XOR2  XLXI_1 (.I0(B_P62), 
                .I1(A_P66), 
                .O(R_P82));
   AND2  XLXI_3 (.I0(B_P62), 
                .I1(A_P66), 
                .O(Cout_P81));
endmodule
`timescale 1ns / 1ps

module FullAdder_MUSER_ServoControl(A_P66, 
                                    B_P62, 
                                    Cin_P61, 
                                    Cout_P81, 
                                    R_P82);

    input A_P66;
    input B_P62;
    input Cin_P61;
   output Cout_P81;
   output R_P82;
   
   wire XLXN_6;
   wire XLXN_9;
   wire XLXN_10;
   
   HalfAdder_MUSER_ServoControl  XLXI_9 (.A_P66(A_P66), 
                                        .B_P62(B_P62), 
                                        .Cout_P81(XLXN_10), 
                                        .R_P82(XLXN_6));
   HalfAdder_MUSER_ServoControl  XLXI_10 (.A_P66(XLXN_6), 
                                         .B_P62(Cin_P61), 
                                         .Cout_P81(XLXN_9), 
                                         .R_P82(R_P82));
   OR2  XLXI_11 (.I0(XLXN_10), 
                .I1(XLXN_9), 
                .O(Cout_P81));
endmodule
`timescale 1ns / 1ps

module FullAdder4Bit_MUSER_ServoControl(A, 
                                        B, 
                                        CI, 
                                        CO, 
                                        S);

    input [3:0] A;
    input [3:0] B;
    input CI;
   output CO;
   output [3:0] S;
   
   wire XLXN_1;
   wire XLXN_2;
   wire XLXN_3;
   
   FullAdder_MUSER_ServoControl  XLXI_1 (.A_P66(A[0]), 
                                        .B_P62(B[0]), 
                                        .Cin_P61(CI), 
                                        .Cout_P81(XLXN_1), 
                                        .R_P82(S[0]));
   FullAdder_MUSER_ServoControl  XLXI_2 (.A_P66(A[1]), 
                                        .B_P62(B[1]), 
                                        .Cin_P61(XLXN_1), 
                                        .Cout_P81(XLXN_2), 
                                        .R_P82(S[1]));
   FullAdder_MUSER_ServoControl  XLXI_3 (.A_P66(A[2]), 
                                        .B_P62(B[2]), 
                                        .Cin_P61(XLXN_2), 
                                        .Cout_P81(XLXN_3), 
                                        .R_P82(S[2]));
   FullAdder_MUSER_ServoControl  XLXI_4 (.A_P66(A[3]), 
                                        .B_P62(B[3]), 
                                        .Cin_P61(XLXN_3), 
                                        .Cout_P81(CO), 
                                        .R_P82(S[3]));
endmodule
`timescale 1ns / 1ps

module FullAdder8Bit_MUSER_ServoControl(A, 
                                        B, 
                                        CO, 
                                        S);

    input [7:0] A;
    input [7:0] B;
   output CO;
   output [7:0] S;
   
   wire XLXN_1;
   wire XLXN_16;
   
   FullAdder4Bit_MUSER_ServoControl  XLXI_1 (.A(A[3:0]), 
                                            .B(B[3:0]), 
                                            .CI(XLXN_16), 
                                            .CO(XLXN_1), 
                                            .S(S[3:0]));
   FullAdder4Bit_MUSER_ServoControl  XLXI_2 (.A(A[7:4]), 
                                            .B(B[7:4]), 
                                            .CI(XLXN_1), 
                                            .CO(CO), 
                                            .S(S[7:4]));
   GND  XLXI_3 (.G(XLXN_16));
endmodule
`timescale 1ns / 1ps

module RegPIPO_8_MUSER_ServoControl(CLK, 
                                    CLR, 
                                    DataIn, 
                                    DataOut);

    input CLK;
    input CLR;
    input [7:0] DataIn;
   output [7:0] DataOut;
   
   
   FDC  XLXI_36 (.C(CLK), 
                .CLR(CLR), 
                .D(DataIn[0]), 
                .Q(DataOut[0]));
   FDC  XLXI_38 (.C(CLK), 
                .CLR(CLR), 
                .D(DataIn[1]), 
                .Q(DataOut[1]));
   FDC  XLXI_39 (.C(CLK), 
                .CLR(CLR), 
                .D(DataIn[2]), 
                .Q(DataOut[2]));
   FDC  XLXI_40 (.C(CLK), 
                .CLR(CLR), 
                .D(DataIn[3]), 
                .Q(DataOut[3]));
   FDC  XLXI_41 (.C(CLK), 
                .CLR(CLR), 
                .D(DataIn[4]), 
                .Q(DataOut[4]));
   FDC  XLXI_42 (.C(CLK), 
                .CLR(CLR), 
                .D(DataIn[5]), 
                .Q(DataOut[5]));
   FDC  XLXI_44 (.C(CLK), 
                .CLR(CLR), 
                .D(DataIn[6]), 
                .Q(DataOut[6]));
   FDC  XLXI_45 (.C(CLK), 
                .CLR(CLR), 
                .D(DataIn[7]), 
                .Q(DataOut[7]));
endmodule
`timescale 1ns / 1ps

module FullSub8Bit_MUSER_ServoControl(A, 
                                      B_, 
                                      S);

    input [7:0] A;
    input [7:0] B_;
   output [7:0] S;
   
   wire [7:0] dB;
   wire [7:0] XLXN_28;
   wire [7:0] XLXN_43;
   
   INV  INV__0 (.I(B_[0]), 
               .O(XLXN_28[0]));
   INV  INV__1 (.I(B_[1]), 
               .O(XLXN_28[1]));
   INV  INV__2 (.I(B_[2]), 
               .O(XLXN_28[2]));
   INV  INV__3 (.I(B_[3]), 
               .O(XLXN_28[3]));
   INV  INV__4 (.I(B_[4]), 
               .O(XLXN_28[4]));
   INV  INV__5 (.I(B_[5]), 
               .O(XLXN_28[5]));
   INV  INV__6 (.I(B_[6]), 
               .O(XLXN_28[6]));
   INV  INV__7 (.I(B_[7]), 
               .O(XLXN_28[7]));
   FullAdder8Bit_MUSER_ServoControl  XLXI_1 (.A(A[7:0]), 
                                            .B(XLXN_28[7:0]), 
                                            .CO(), 
                                            .S(XLXN_43[7:0]));
   FullAdder8Bit_MUSER_ServoControl  XLXI_43 (.A(XLXN_43[7:0]), 
                                             .B(dB[7:0]), 
                                             .CO(), 
                                             .S(S[7:0]));
   GND  XLXI_46_0 (.G(dB[1]));
   GND  XLXI_46_1 (.G(dB[2]));
   GND  XLXI_46_2 (.G(dB[3]));
   GND  XLXI_46_3 (.G(dB[4]));
   GND  XLXI_46_4 (.G(dB[5]));
   GND  XLXI_46_5 (.G(dB[6]));
   GND  XLXI_46_6 (.G(dB[7]));
   VCC  XLXI_47 (.P(dB[0]));
endmodule
`timescale 1ns / 1ps

module Counter_FB_8Bits_MUSER_ServoControl(CB, 
                                           CLK, 
                                           CLR, 
                                           C_Out);

    input CB;
    input CLK;
    input CLR;
   output [7:0] C_Out;
   
   wire [7:0] one;
   wire [7:0] one1;
   wire [7:0] SEL;
   wire [7:0] SUM;
   wire XLXN_4;
   wire [7:0] XLXN_20;
   wire [7:0] XLXN_73;
   wire XLXN_133;
   wire [7:0] C_Out_DUMMY;
   
   assign C_Out[7:0] = C_Out_DUMMY[7:0];
   GND  XLXI_3 (.G(XLXN_4));
   FullSub8Bit_MUSER_ServoControl  XLXI_8 (.A(C_Out_DUMMY[7:0]), 
                                          .B_(one1[7:0]), 
                                          .S(XLXN_73[7:0]));
   VCC  XLXI_9 (.P(one1[0]));
   GND  XLXI_10_0 (.G(one1[1]));
   GND  XLXI_10_1 (.G(one1[2]));
   GND  XLXI_10_2 (.G(one1[3]));
   GND  XLXI_10_3 (.G(one1[4]));
   GND  XLXI_10_4 (.G(one1[5]));
   GND  XLXI_10_5 (.G(one1[6]));
   GND  XLXI_10_6 (.G(one1[7]));
   (* HU_SET = "XLXI_13_0_7" *) 
   M2_1_HXILINX_ServoControl  XLXI_13_0 (.D0(SUM[0]), 
                                        .D1(XLXN_73[0]), 
                                        .S0(SEL[0]), 
                                        .O(XLXN_20[0]));
   (* HU_SET = "XLXI_13_1_6" *) 
   M2_1_HXILINX_ServoControl  XLXI_13_1 (.D0(SUM[1]), 
                                        .D1(XLXN_73[1]), 
                                        .S0(SEL[1]), 
                                        .O(XLXN_20[1]));
   (* HU_SET = "XLXI_13_2_5" *) 
   M2_1_HXILINX_ServoControl  XLXI_13_2 (.D0(SUM[2]), 
                                        .D1(XLXN_73[2]), 
                                        .S0(SEL[2]), 
                                        .O(XLXN_20[2]));
   (* HU_SET = "XLXI_13_3_4" *) 
   M2_1_HXILINX_ServoControl  XLXI_13_3 (.D0(SUM[3]), 
                                        .D1(XLXN_73[3]), 
                                        .S0(SEL[3]), 
                                        .O(XLXN_20[3]));
   (* HU_SET = "XLXI_13_4_3" *) 
   M2_1_HXILINX_ServoControl  XLXI_13_4 (.D0(SUM[4]), 
                                        .D1(XLXN_73[4]), 
                                        .S0(SEL[4]), 
                                        .O(XLXN_20[4]));
   (* HU_SET = "XLXI_13_5_2" *) 
   M2_1_HXILINX_ServoControl  XLXI_13_5 (.D0(SUM[5]), 
                                        .D1(XLXN_73[5]), 
                                        .S0(SEL[5]), 
                                        .O(XLXN_20[5]));
   (* HU_SET = "XLXI_13_6_1" *) 
   M2_1_HXILINX_ServoControl  XLXI_13_6 (.D0(SUM[6]), 
                                        .D1(XLXN_73[6]), 
                                        .S0(SEL[6]), 
                                        .O(XLXN_20[6]));
   (* HU_SET = "XLXI_13_7_0" *) 
   M2_1_HXILINX_ServoControl  XLXI_13_7 (.D0(SUM[7]), 
                                        .D1(XLXN_73[7]), 
                                        .S0(SEL[7]), 
                                        .O(XLXN_20[7]));
   BUF  XLXI_15_0 (.I(CB), 
                  .O(SEL[0]));
   BUF  XLXI_15_1 (.I(CB), 
                  .O(SEL[1]));
   BUF  XLXI_15_2 (.I(CB), 
                  .O(SEL[2]));
   BUF  XLXI_15_3 (.I(CB), 
                  .O(SEL[3]));
   BUF  XLXI_15_4 (.I(CB), 
                  .O(SEL[4]));
   BUF  XLXI_15_5 (.I(CB), 
                  .O(SEL[5]));
   BUF  XLXI_15_6 (.I(CB), 
                  .O(SEL[6]));
   BUF  XLXI_15_7 (.I(CB), 
                  .O(SEL[7]));
   RegPIPO_8_MUSER_ServoControl  XLXI_20 (.CLK(CLK), 
                                         .CLR(CLR), 
                                         .DataIn(XLXN_20[7:0]), 
                                         .DataOut(C_Out_DUMMY[7:0]));
   FullAdder4Bit_MUSER_ServoControl  XLXI_25 (.A(C_Out_DUMMY[3:0]), 
                                             .B(one[3:0]), 
                                             .CI(XLXN_4), 
                                             .CO(XLXN_133), 
                                             .S(SUM[3:0]));
   FullAdder4Bit_MUSER_ServoControl  XLXI_26 (.A(C_Out_DUMMY[7:4]), 
                                             .B(one[7:4]), 
                                             .CI(XLXN_133), 
                                             .CO(), 
                                             .S(SUM[7:4]));
   VCC  XLXI_51 (.P(one[0]));
   GND  XLXI_52_0 (.G(one[1]));
   GND  XLXI_52_1 (.G(one[2]));
   GND  XLXI_52_2 (.G(one[3]));
   GND  XLXI_52_3 (.G(one[4]));
   GND  XLXI_52_4 (.G(one[5]));
   GND  XLXI_52_5 (.G(one[6]));
   GND  XLXI_52_6 (.G(one[7]));
endmodule
`timescale 1ns / 1ps

module ManualControl_MUSER_ServoControl(DOWN, 
                                        EN, 
                                        EndValue, 
                                        StartValue, 
                                        UP, 
                                        OUTPUT);

    input DOWN;
    input EN;
    input [7:0] EndValue;
    input [7:0] StartValue;
    input UP;
   output [7:0] OUTPUT;
   
   wire [7:0] XLXN_75;
   wire XLXN_114;
   wire XLXN_120;
   wire XLXN_121;
   wire XLXN_124;
   wire [7:0] XLXN_132;
   wire XLXN_196;
   wire XLXN_199;
   wire XLXN_200;
   wire XLXN_203;
   
   Counter_FB_8Bits_MUSER_ServoControl  XLXI_1 (.CB(DOWN), 
                                               .CLK(XLXN_203), 
                                               .CLR(XLXN_196), 
                                               .C_Out(XLXN_75[7:0]));
   OR2  XLXI_2 (.I0(DOWN), 
               .I1(UP), 
               .O(XLXN_199));
   FullAdder8Bit_MUSER_ServoControl  XLXI_6 (.A(XLXN_75[7:0]), 
                                            .B(StartValue[7:0]), 
                                            .CO(), 
                                            .S(XLXN_132[7:0]));
   (* HU_SET = "XLXI_18_8" *) 
   COMPM8_HXILINX_ServoControl  XLXI_18 (.A(XLXN_132[7:0]), 
                                        .B(EndValue[7:0]), 
                                        .GT(), 
                                        .LT(XLXN_124));
   (* HU_SET = "XLXI_19_9" *) 
   COMPM8_HXILINX_ServoControl  XLXI_19 (.A(XLXN_132[7:0]), 
                                        .B(StartValue[7:0]), 
                                        .GT(XLXN_114), 
                                        .LT());
   AND2  XLXI_39 (.I0(UP), 
                 .I1(XLXN_124), 
                 .O(XLXN_120));
   AND2  XLXI_40 (.I0(DOWN), 
                 .I1(XLXN_114), 
                 .O(XLXN_121));
   OR2  XLXI_49 (.I0(XLXN_121), 
                .I1(XLXN_120), 
                .O(XLXN_200));
   GND  XLXI_50 (.G(XLXN_196));
   BUF  XLXI_51_0 (.I(XLXN_132[0]), 
                  .O(OUTPUT[0]));
   BUF  XLXI_51_1 (.I(XLXN_132[1]), 
                  .O(OUTPUT[1]));
   BUF  XLXI_51_2 (.I(XLXN_132[2]), 
                  .O(OUTPUT[2]));
   BUF  XLXI_51_3 (.I(XLXN_132[3]), 
                  .O(OUTPUT[3]));
   BUF  XLXI_51_4 (.I(XLXN_132[4]), 
                  .O(OUTPUT[4]));
   BUF  XLXI_51_5 (.I(XLXN_132[5]), 
                  .O(OUTPUT[5]));
   BUF  XLXI_51_6 (.I(XLXN_132[6]), 
                  .O(OUTPUT[6]));
   BUF  XLXI_51_7 (.I(XLXN_132[7]), 
                  .O(OUTPUT[7]));
   AND3  XLXI_53 (.I0(XLXN_200), 
                 .I1(XLXN_199), 
                 .I2(EN), 
                 .O(XLXN_203));
endmodule
`timescale 1ns / 1ps

module RegPIPO_16_MUSER_ServoControl(CLK, 
                                     DataIn, 
                                     DataOut);

    input CLK;
    input [15:0] DataIn;
   output [15:0] DataOut;
   
   
   FD #( .INIT(1'b0) ) XLXI_1 (.C(CLK), 
              .D(DataIn[0]), 
              .Q(DataOut[0]));
   FD #( .INIT(1'b0) ) XLXI_2 (.C(CLK), 
              .D(DataIn[1]), 
              .Q(DataOut[1]));
   FD #( .INIT(1'b0) ) XLXI_17 (.C(CLK), 
               .D(DataIn[2]), 
               .Q(DataOut[2]));
   FD #( .INIT(1'b0) ) XLXI_18 (.C(CLK), 
               .D(DataIn[3]), 
               .Q(DataOut[3]));
   FD #( .INIT(1'b0) ) XLXI_31 (.C(CLK), 
               .D(DataIn[4]), 
               .Q(DataOut[4]));
   FD #( .INIT(1'b0) ) XLXI_32 (.C(CLK), 
               .D(DataIn[5]), 
               .Q(DataOut[5]));
   FD #( .INIT(1'b0) ) XLXI_33 (.C(CLK), 
               .D(DataIn[6]), 
               .Q(DataOut[6]));
   FD #( .INIT(1'b0) ) XLXI_34 (.C(CLK), 
               .D(DataIn[7]), 
               .Q(DataOut[7]));
   FD #( .INIT(1'b0) ) XLXI_35 (.C(CLK), 
               .D(DataIn[12]), 
               .Q(DataOut[12]));
   FD #( .INIT(1'b0) ) XLXI_36 (.C(CLK), 
               .D(DataIn[13]), 
               .Q(DataOut[13]));
   FD #( .INIT(1'b0) ) XLXI_37 (.C(CLK), 
               .D(DataIn[14]), 
               .Q(DataOut[14]));
   FD #( .INIT(1'b0) ) XLXI_38 (.C(CLK), 
               .D(DataIn[11]), 
               .Q(DataOut[11]));
   FD #( .INIT(1'b0) ) XLXI_39 (.C(CLK), 
               .D(DataIn[10]), 
               .Q(DataOut[10]));
   FD #( .INIT(1'b0) ) XLXI_40 (.C(CLK), 
               .D(DataIn[9]), 
               .Q(DataOut[9]));
   FD #( .INIT(1'b0) ) XLXI_41 (.C(CLK), 
               .D(DataIn[8]), 
               .Q(DataOut[8]));
   FD #( .INIT(1'b0) ) XLXI_42 (.C(CLK), 
               .D(DataIn[15]), 
               .Q(DataOut[15]));
endmodule
`timescale 1ns / 1ps

module DIV_200_MUSER_ServoControl(CLK_IN, 
                                  CLK_OUT);

    input CLK_IN;
   output CLK_OUT;
   
   wire XLXN_3;
   wire XLXN_4;
   wire XLXN_9;
   wire XLXN_20;
   
   (* HU_SET = "XLXI_1_10" *) 
   FTC_HXILINX_ServoControl  XLXI_1 (.C(XLXN_3), 
                                    .CLR(XLXN_9), 
                                    .T(XLXN_20), 
                                    .Q(CLK_OUT));
   (* HU_SET = "XLXI_2_11" *) 
   CD4CE_HXILINX_ServoControl  XLXI_2 (.C(XLXN_4), 
                                      .CE(XLXN_20), 
                                      .CLR(XLXN_9), 
                                      .CEO(), 
                                      .Q0(), 
                                      .Q1(), 
                                      .Q2(), 
                                      .Q3(), 
                                      .TC(XLXN_3));
   (* HU_SET = "XLXI_8_12" *) 
   CD4CE_HXILINX_ServoControl  XLXI_8 (.C(CLK_IN), 
                                      .CE(XLXN_20), 
                                      .CLR(XLXN_9), 
                                      .CEO(), 
                                      .Q0(), 
                                      .Q1(), 
                                      .Q2(), 
                                      .Q3(), 
                                      .TC(XLXN_4));
   VCC  XLXI_13 (.P(XLXN_20));
endmodule
`timescale 1ns / 1ps

module PWM_Gen_MUSER_ServoControl(Duty, 
                                  FPGA_CLK, 
                                  PWM);

    input [15:0] Duty;
    input FPGA_CLK;
   output PWM;
   
   wire [15:0] BIN2000;
   wire XLXN_1;
   wire XLXN_2;
   wire [15:0] XLXN_5;
   wire XLXN_7;
   
   (* HU_SET = "XLXI_2_13" *) 
   CC16CE_HXILINX_ServoControl  XLXI_2 (.C(XLXN_1), 
                                       .CE(XLXN_2), 
                                       .CLR(XLXN_7), 
                                       .CEO(), 
                                       .Q(XLXN_5[15:0]), 
                                       .TC());
   VCC  XLXI_4 (.P(XLXN_2));
   (* HU_SET = "XLXI_8_14" *) 
   COMPM16_HXILINX_ServoControl  XLXI_8 (.A(XLXN_5[15:0]), 
                                        .B(Duty[15:0]), 
                                        .GT(), 
                                        .LT(PWM));
   (* HU_SET = "XLXI_10_15" *) 
   COMP16_HXILINX_ServoControl  XLXI_10 (.A(BIN2000[15:0]), 
                                        .B(XLXN_5[15:0]), 
                                        .EQ(XLXN_7));
   GND  XLXI_37_0 (.G(BIN2000[0]));
   GND  XLXI_37_1 (.G(BIN2000[1]));
   GND  XLXI_37_2 (.G(BIN2000[2]));
   GND  XLXI_37_3 (.G(BIN2000[3]));
   GND  XLXI_38 (.G(BIN2000[5]));
   GND  XLXI_39_0 (.G(BIN2000[11]));
   GND  XLXI_39_1 (.G(BIN2000[12]));
   GND  XLXI_39_2 (.G(BIN2000[13]));
   GND  XLXI_39_3 (.G(BIN2000[14]));
   GND  XLXI_39_4 (.G(BIN2000[15]));
   VCC  XLXI_40_0 (.P(BIN2000[6]));
   VCC  XLXI_40_1 (.P(BIN2000[7]));
   VCC  XLXI_40_2 (.P(BIN2000[8]));
   VCC  XLXI_40_3 (.P(BIN2000[9]));
   VCC  XLXI_40_4 (.P(BIN2000[10]));
   VCC  XLXI_41 (.P(BIN2000[4]));
   DIV_200_MUSER_ServoControl  XLXI_42 (.CLK_IN(FPGA_CLK), 
                                       .CLK_OUT(XLXN_1));
endmodule
`timescale 1ns / 1ps

module Counter16_TC_MUSER_ServoControl(CLK, 
                                       TC);

    input CLK;
   output TC;
   
   wire RESET;
   wire XLXN_2;
   wire XLXN_23;
   wire XLXN_24;
   wire XLXN_25;
   wire XLXN_26;
   
   (* HU_SET = "XLXI_1_16" *) 
   CB4CE_HXILINX_ServoControl  XLXI_1 (.C(CLK), 
                                      .CE(XLXN_2), 
                                      .CLR(RESET), 
                                      .CEO(), 
                                      .Q0(XLXN_23), 
                                      .Q1(XLXN_24), 
                                      .Q2(XLXN_25), 
                                      .Q3(XLXN_26), 
                                      .TC());
   VCC  XLXI_2 (.P(XLXN_2));
   GND  XLXI_10 (.G(RESET));
   AND4B4  XLXI_15 (.I0(XLXN_26), 
                   .I1(XLXN_25), 
                   .I2(XLXN_24), 
                   .I3(XLXN_23), 
                   .O(TC));
endmodule
`timescale 1ns / 1ps

module RegSIPO_16_MUSER_ServoControl(CLK, 
                                     DataIn, 
                                     DataOut);

    input CLK;
    input DataIn;
   output [15:0] DataOut;
   
   wire [15:0] DataOut_DUMMY;
   
   assign DataOut[15:0] = DataOut_DUMMY[15:0];
   FD #( .INIT(1'b0) ) XLXI_1 (.C(CLK), 
              .D(DataIn), 
              .Q(DataOut_DUMMY[0]));
   FD #( .INIT(1'b0) ) XLXI_2 (.C(CLK), 
              .D(DataOut_DUMMY[0]), 
              .Q(DataOut_DUMMY[1]));
   FD #( .INIT(1'b0) ) XLXI_17 (.C(CLK), 
               .D(DataOut_DUMMY[1]), 
               .Q(DataOut_DUMMY[2]));
   FD #( .INIT(1'b0) ) XLXI_18 (.C(CLK), 
               .D(DataOut_DUMMY[2]), 
               .Q(DataOut_DUMMY[3]));
   FD #( .INIT(1'b0) ) XLXI_31 (.C(CLK), 
               .D(DataOut_DUMMY[3]), 
               .Q(DataOut_DUMMY[4]));
   FD #( .INIT(1'b0) ) XLXI_32 (.C(CLK), 
               .D(DataOut_DUMMY[4]), 
               .Q(DataOut_DUMMY[5]));
   FD #( .INIT(1'b0) ) XLXI_33 (.C(CLK), 
               .D(DataOut_DUMMY[5]), 
               .Q(DataOut_DUMMY[6]));
   FD #( .INIT(1'b0) ) XLXI_34 (.C(CLK), 
               .D(DataOut_DUMMY[6]), 
               .Q(DataOut_DUMMY[7]));
   FD #( .INIT(1'b0) ) XLXI_35 (.C(CLK), 
               .D(DataOut_DUMMY[7]), 
               .Q(DataOut_DUMMY[8]));
   FD #( .INIT(1'b0) ) XLXI_36 (.C(CLK), 
               .D(DataOut_DUMMY[8]), 
               .Q(DataOut_DUMMY[9]));
   FD #( .INIT(1'b0) ) XLXI_37 (.C(CLK), 
               .D(DataOut_DUMMY[9]), 
               .Q(DataOut_DUMMY[10]));
   FD #( .INIT(1'b0) ) XLXI_38 (.C(CLK), 
               .D(DataOut_DUMMY[10]), 
               .Q(DataOut_DUMMY[11]));
   FD #( .INIT(1'b0) ) XLXI_39 (.C(CLK), 
               .D(DataOut_DUMMY[11]), 
               .Q(DataOut_DUMMY[12]));
   FD #( .INIT(1'b0) ) XLXI_40 (.C(CLK), 
               .D(DataOut_DUMMY[12]), 
               .Q(DataOut_DUMMY[13]));
   FD #( .INIT(1'b0) ) XLXI_41 (.C(CLK), 
               .D(DataOut_DUMMY[13]), 
               .Q(DataOut_DUMMY[14]));
   FD #( .INIT(1'b0) ) XLXI_42 (.C(CLK), 
               .D(DataOut_DUMMY[14]), 
               .Q(DataOut_DUMMY[15]));
endmodule
`timescale 1ns / 1ps

module ServoControl(CLK_P123, 
                    EndValue, 
                    ESP_CLK, 
                    ESP_IN, 
                    Manual_EN, 
                    MODE, 
                    StartValue, 
                    SW_DOWN, 
                    SW_UP, 
                    PWM_Servo1, 
                    Reg_PIPO);

    input CLK_P123;
    input [15:0] EndValue;
    input ESP_CLK;
    input ESP_IN;
    input Manual_EN;
    input MODE;
    input [15:0] StartValue;
    input SW_DOWN;
    input SW_UP;
   output PWM_Servo1;
   output [15:0] Reg_PIPO;
   
   wire [15:0] ManualOut;
   wire XLXN_70;
   wire [15:0] XLXN_78;
   wire [15:0] XLXN_79;
   wire [15:0] XLXN_84;
   wire XLXN_102;
   wire [15:0] XLXN_103;
   wire [15:0] XLXN_109;
   
   PWM_Gen_MUSER_ServoControl  XLXI_1 (.Duty(XLXN_109[15:0]), 
                                      .FPGA_CLK(CLK_P123), 
                                      .PWM(PWM_Servo1));
   RegSIPO_16_MUSER_ServoControl  XLXI_33 (.CLK(ESP_CLK), 
                                          .DataIn(ESP_IN), 
                                          .DataOut(XLXN_78[15:0]));
   RegPIPO_16_MUSER_ServoControl  XLXI_36 (.CLK(XLXN_70), 
                                          .DataIn(XLXN_78[15:0]), 
                                          .DataOut(XLXN_103[15:0]));
   Counter16_TC_MUSER_ServoControl  XLXI_37 (.CLK(ESP_CLK), 
                                            .TC(XLXN_70));
   RegPIPO_16_MUSER_ServoControl  XLXI_38 (.CLK(XLXN_102), 
                                          .DataIn(ManualOut[15:0]), 
                                          .DataOut(XLXN_79[15:0]));
   (* HU_SET = "XLXI_39_0_32" *) 
   M2_1_HXILINX_ServoControl  XLXI_39_0 (.D0(XLXN_79[0]), 
                                        .D1(XLXN_103[0]), 
                                        .S0(XLXN_84[0]), 
                                        .O(XLXN_109[0]));
   (* HU_SET = "XLXI_39_1_31" *) 
   M2_1_HXILINX_ServoControl  XLXI_39_1 (.D0(XLXN_79[1]), 
                                        .D1(XLXN_103[1]), 
                                        .S0(XLXN_84[1]), 
                                        .O(XLXN_109[1]));
   (* HU_SET = "XLXI_39_2_30" *) 
   M2_1_HXILINX_ServoControl  XLXI_39_2 (.D0(XLXN_79[2]), 
                                        .D1(XLXN_103[2]), 
                                        .S0(XLXN_84[2]), 
                                        .O(XLXN_109[2]));
   (* HU_SET = "XLXI_39_3_29" *) 
   M2_1_HXILINX_ServoControl  XLXI_39_3 (.D0(XLXN_79[3]), 
                                        .D1(XLXN_103[3]), 
                                        .S0(XLXN_84[3]), 
                                        .O(XLXN_109[3]));
   (* HU_SET = "XLXI_39_4_28" *) 
   M2_1_HXILINX_ServoControl  XLXI_39_4 (.D0(XLXN_79[4]), 
                                        .D1(XLXN_103[4]), 
                                        .S0(XLXN_84[4]), 
                                        .O(XLXN_109[4]));
   (* HU_SET = "XLXI_39_5_27" *) 
   M2_1_HXILINX_ServoControl  XLXI_39_5 (.D0(XLXN_79[5]), 
                                        .D1(XLXN_103[5]), 
                                        .S0(XLXN_84[5]), 
                                        .O(XLXN_109[5]));
   (* HU_SET = "XLXI_39_6_26" *) 
   M2_1_HXILINX_ServoControl  XLXI_39_6 (.D0(XLXN_79[6]), 
                                        .D1(XLXN_103[6]), 
                                        .S0(XLXN_84[6]), 
                                        .O(XLXN_109[6]));
   (* HU_SET = "XLXI_39_7_25" *) 
   M2_1_HXILINX_ServoControl  XLXI_39_7 (.D0(XLXN_79[7]), 
                                        .D1(XLXN_103[7]), 
                                        .S0(XLXN_84[7]), 
                                        .O(XLXN_109[7]));
   (* HU_SET = "XLXI_39_8_24" *) 
   M2_1_HXILINX_ServoControl  XLXI_39_8 (.D0(XLXN_79[8]), 
                                        .D1(XLXN_103[8]), 
                                        .S0(XLXN_84[8]), 
                                        .O(XLXN_109[8]));
   (* HU_SET = "XLXI_39_9_23" *) 
   M2_1_HXILINX_ServoControl  XLXI_39_9 (.D0(XLXN_79[9]), 
                                        .D1(XLXN_103[9]), 
                                        .S0(XLXN_84[9]), 
                                        .O(XLXN_109[9]));
   (* HU_SET = "XLXI_39_10_22" *) 
   M2_1_HXILINX_ServoControl  XLXI_39_10 (.D0(XLXN_79[10]), 
                                         .D1(XLXN_103[10]), 
                                         .S0(XLXN_84[10]), 
                                         .O(XLXN_109[10]));
   (* HU_SET = "XLXI_39_11_21" *) 
   M2_1_HXILINX_ServoControl  XLXI_39_11 (.D0(XLXN_79[11]), 
                                         .D1(XLXN_103[11]), 
                                         .S0(XLXN_84[11]), 
                                         .O(XLXN_109[11]));
   (* HU_SET = "XLXI_39_12_20" *) 
   M2_1_HXILINX_ServoControl  XLXI_39_12 (.D0(XLXN_79[12]), 
                                         .D1(XLXN_103[12]), 
                                         .S0(XLXN_84[12]), 
                                         .O(XLXN_109[12]));
   (* HU_SET = "XLXI_39_13_19" *) 
   M2_1_HXILINX_ServoControl  XLXI_39_13 (.D0(XLXN_79[13]), 
                                         .D1(XLXN_103[13]), 
                                         .S0(XLXN_84[13]), 
                                         .O(XLXN_109[13]));
   (* HU_SET = "XLXI_39_14_18" *) 
   M2_1_HXILINX_ServoControl  XLXI_39_14 (.D0(XLXN_79[14]), 
                                         .D1(XLXN_103[14]), 
                                         .S0(XLXN_84[14]), 
                                         .O(XLXN_109[14]));
   (* HU_SET = "XLXI_39_15_17" *) 
   M2_1_HXILINX_ServoControl  XLXI_39_15 (.D0(XLXN_79[15]), 
                                         .D1(XLXN_103[15]), 
                                         .S0(XLXN_84[15]), 
                                         .O(XLXN_109[15]));
   ManualControl_MUSER_ServoControl  XLXI_41 (.DOWN(SW_DOWN), 
                                             .EN(Manual_EN), 
                                             .EndValue(EndValue[7:0]), 
                                             .StartValue(StartValue[7:0]), 
                                             .UP(SW_UP), 
                                             .OUTPUT(ManualOut[7:0]));
   OR2  XLXI_43 (.I0(SW_DOWN), 
                .I1(SW_UP), 
                .O(XLXN_102));
   BUF  XLXI_45_0 (.I(MODE), 
                  .O(XLXN_84[0]));
   BUF  XLXI_45_1 (.I(MODE), 
                  .O(XLXN_84[1]));
   BUF  XLXI_45_2 (.I(MODE), 
                  .O(XLXN_84[2]));
   BUF  XLXI_45_3 (.I(MODE), 
                  .O(XLXN_84[3]));
   BUF  XLXI_45_4 (.I(MODE), 
                  .O(XLXN_84[4]));
   BUF  XLXI_45_5 (.I(MODE), 
                  .O(XLXN_84[5]));
   BUF  XLXI_45_6 (.I(MODE), 
                  .O(XLXN_84[6]));
   BUF  XLXI_45_7 (.I(MODE), 
                  .O(XLXN_84[7]));
   BUF  XLXI_45_8 (.I(MODE), 
                  .O(XLXN_84[8]));
   BUF  XLXI_45_9 (.I(MODE), 
                  .O(XLXN_84[9]));
   BUF  XLXI_45_10 (.I(MODE), 
                   .O(XLXN_84[10]));
   BUF  XLXI_45_11 (.I(MODE), 
                   .O(XLXN_84[11]));
   BUF  XLXI_45_12 (.I(MODE), 
                   .O(XLXN_84[12]));
   BUF  XLXI_45_13 (.I(MODE), 
                   .O(XLXN_84[13]));
   BUF  XLXI_45_14 (.I(MODE), 
                   .O(XLXN_84[14]));
   BUF  XLXI_45_15 (.I(MODE), 
                   .O(XLXN_84[15]));
   BUF  XLXI_47_0 (.I(XLXN_109[0]), 
                  .O(Reg_PIPO[0]));
   BUF  XLXI_47_1 (.I(XLXN_109[1]), 
                  .O(Reg_PIPO[1]));
   BUF  XLXI_47_2 (.I(XLXN_109[2]), 
                  .O(Reg_PIPO[2]));
   BUF  XLXI_47_3 (.I(XLXN_109[3]), 
                  .O(Reg_PIPO[3]));
   BUF  XLXI_47_4 (.I(XLXN_109[4]), 
                  .O(Reg_PIPO[4]));
   BUF  XLXI_47_5 (.I(XLXN_109[5]), 
                  .O(Reg_PIPO[5]));
   BUF  XLXI_47_6 (.I(XLXN_109[6]), 
                  .O(Reg_PIPO[6]));
   BUF  XLXI_47_7 (.I(XLXN_109[7]), 
                  .O(Reg_PIPO[7]));
   BUF  XLXI_47_8 (.I(XLXN_109[8]), 
                  .O(Reg_PIPO[8]));
   BUF  XLXI_47_9 (.I(XLXN_109[9]), 
                  .O(Reg_PIPO[9]));
   BUF  XLXI_47_10 (.I(XLXN_109[10]), 
                   .O(Reg_PIPO[10]));
   BUF  XLXI_47_11 (.I(XLXN_109[11]), 
                   .O(Reg_PIPO[11]));
   BUF  XLXI_47_12 (.I(XLXN_109[12]), 
                   .O(Reg_PIPO[12]));
   BUF  XLXI_47_13 (.I(XLXN_109[13]), 
                   .O(Reg_PIPO[13]));
   BUF  XLXI_47_14 (.I(XLXN_109[14]), 
                   .O(Reg_PIPO[14]));
   BUF  XLXI_47_15 (.I(XLXN_109[15]), 
                   .O(Reg_PIPO[15]));
   GND  XLXI_48_0 (.G(ManualOut[8]));
   GND  XLXI_48_1 (.G(ManualOut[9]));
   GND  XLXI_48_2 (.G(ManualOut[10]));
   GND  XLXI_48_3 (.G(ManualOut[11]));
   GND  XLXI_48_4 (.G(ManualOut[12]));
   GND  XLXI_48_5 (.G(ManualOut[13]));
   GND  XLXI_48_6 (.G(ManualOut[14]));
   GND  XLXI_48_7 (.G(ManualOut[15]));
endmodule
