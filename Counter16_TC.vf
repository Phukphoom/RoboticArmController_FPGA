////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : Counter16_TC.vf
// /___/   /\     Timestamp : 12/16/2020 02:36:20
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family spartan6 -verilog C:/Users/Admin/Desktop/RoboticArm/RoboticArm/Counter16_TC.vf -w C:/Users/Admin/Desktop/RoboticArm/RoboticArm/Counter16_TC.sch
//Design Name: Counter16_TC
//Device: spartan6
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 100 ps / 10 ps

module CB4CE_HXILINX_Counter16_TC(CEO, Q0, Q1, Q2, Q3, TC, C, CE, CLR);
   
   localparam TERMINAL_COUNT = 4'b1111;
   
   output             CEO;
   output             Q0;
   output             Q1;
   output             Q2;
   output             Q3;
   output             TC;

   input 	      C;	
   input 	      CE;	
   input 	      CLR;	
   
   reg                Q0;
   reg                Q1;
   reg                Q2;
   reg                Q3;
   
   always @(posedge C or posedge CLR)
     begin
	if (CLR)
	  {Q3, Q2, Q1, Q0} <= 4'b0000;
	else if (CE)
	  {Q3, Q2, Q1,Q0} <= {Q3, Q2, Q1,Q0} + 1;
     end
   
   assign CEO = TC & CE;
   assign TC = ({Q3, Q2, Q1, Q0} == TERMINAL_COUNT);
   
endmodule
`timescale 1ns / 1ps

module Counter16_TC(CLK, 
                    TC);

    input CLK;
   output TC;
   
   wire RESET;
   wire XLXN_2;
   wire XLXN_23;
   wire XLXN_24;
   wire XLXN_25;
   wire XLXN_26;
   
   (* HU_SET = "XLXI_1_249" *) 
   CB4CE_HXILINX_Counter16_TC  XLXI_1 (.C(CLK), 
                                      .CE(XLXN_2), 
                                      .CLR(RESET), 
                                      .CEO(), 
                                      .Q0(XLXN_23), 
                                      .Q1(XLXN_24), 
                                      .Q2(XLXN_25), 
                                      .Q3(XLXN_26), 
                                      .TC());
   VCC  XLXI_2 (.P(XLXN_2));
   GND  XLXI_10 (.G(RESET));
   AND4B4  XLXI_15 (.I0(XLXN_26), 
                   .I1(XLXN_25), 
                   .I2(XLXN_24), 
                   .I3(XLXN_23), 
                   .O(TC));
endmodule
